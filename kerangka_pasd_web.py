# -*- coding: utf-8 -*-
"""Kerangka pasd web.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zlv1eG4yiGCEK6L6WSgHU7HAziaykyMz
"""

import streamlit as st
import pandas as pd
import joblib
from google.colab import drive
drive.mount('/content/drive')

st.title("üß† Prediksi Tipe Kepribadian")

# Load model dan encoder
model = joblib.load('/content/drive/MyDrive/PASD WEB/random_forest_model.pkl')
gender_encoder = joblib.load('/content/drive/MyDrive/PASD WEB/gender_encoder.pkl')
interest_encoder = joblib.load('/content/drive/MyDrive/PASD WEB/interest_encoder.pkl')
target_encoder = joblib.load('/content/drive/MyDrive/PASD WEB/target_encoder.pkl')

with st.form("prediction_form"):
    st.subheader("Silakan isi data berikut:")

    age = st.slider("Usia", min_value=10, max_value=100, value=21)

    gender = st.radio("Jenis Kelamin", ['Male', 'Female'])

    education = st.selectbox("Tingkat Pendidikan", [
        'Sarjana / SMA / Tidak Berpendidikan',
        'Pascasarjana atau lebih tinggi'
    ])
    education_bin = 1 if education == 'Pascasarjana atau lebih tinggi' else 0

    interest = st.selectbox("Minat Utama", [
        'Science', 'Arts', 'Technology', 'Business', 'Sports'
    ])

    introversion = st.slider("Introversion (0=Introvert, 10=Ekstrovert)", 0.0, 10.0, 5.0)
    sensing = st.slider("Sensing (0=Intuition, 10=Sensing)", 0.0, 10.0, 5.0)
    thinking = st.slider("Thinking (0=Feeling, 10=Thinking)", 0.0, 10.0, 5.0)
    judging = st.slider("Judging (0=Perceiving, 10=Judging)", 0.0, 10.0, 5.0)

    submitted = st.form_submit_button("üîç Prediksi")

if submitted:
    # Siapkan data
    df = pd.DataFrame([[
        age, gender, education_bin, introversion, sensing, thinking, judging, interest
    ]], columns=[
        'Age', 'Gender', 'Education',
        'Introversion Score', 'Sensing Score', 'Thinking Score',
        'Judging Score', 'Interest'
    ])

    df['Gender'] = gender_encoder.transform(df['Gender'])
    df['Interest'] = interest_encoder.transform(df['Interest'])

    # Prediksi
    prediction = model.predict(df)
    result = target_encoder.inverse_transform(prediction)[0]

    st.success(f"üéâ Tipe kepribadian kamu adalah: **{result}**")