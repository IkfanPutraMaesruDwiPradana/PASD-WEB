# -*- coding: utf-8 -*-
"""Kerangka pasd webfiksfiks.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zlv1eG4yiGCEK6L6WSgHU7HAziaykyMz
"""

import streamlit as st
import pandas as pd
import joblib
import os
import gdown

# --- Configurasi Google Drive ---
MODEL_FILE_ID = '1DDzP7owxInGaTqx-9077zXuNAsIg7qKC'  # GANTI DENGAN ID FILE MODEL KAMU
MODEL_FILENAME = 'random_forest_model.pkl'

# Fungsi untuk download file jika belum ada
def download_from_drive(file_id, output):
    url = f'https://drive.google.com/uc?id={file_id}'
    if not os.path.exists(output):
        with st.spinner(f"Mengunduh {output} dari Google Drive..."):
            gdown.download(url, output, quiet=False)

# Unduh model jika perlu
download_from_drive(MODEL_FILE_ID, MODEL_FILENAME)

# --- Load semua file .pkl ---
try:
    model = joblib.load(MODEL_FILENAME)
    gender_encoder = joblib.load('gender_encoder.pkl')
    interest_encoder = joblib.load('interest_encoder.pkl')
    target_encoder = joblib.load('target_encoder.pkl')
    st.success("‚úÖ Model dan encoder berhasil dimuat.")
except Exception as e:
    st.error(f"‚ùå Gagal memuat model/encoder: {e}")
    st.stop()

# --- UI Streamlit ---
st.title("üß† Prediksi Tipe Kepribadian")

with st.form("prediction_form"):
    st.subheader("üìã Silakan isi data berikut:")

    age = st.slider("Usia", min_value=10, max_value=100, value=21)

    gender = st.radio("Jenis Kelamin", ['Male', 'Female'])

    education = st.selectbox("Tingkat Pendidikan", [
        'Sarjana / SMA / Tidak Berpendidikan',
        'Pascasarjana atau lebih tinggi'
    ])
    education_bin = 1 if education == 'Pascasarjana atau lebih tinggi' else 0

    interest = st.selectbox("Minat Utama", [
        'Science', 'Arts', 'Technology', 'Business', 'Sports'
    ])

    introversion = st.slider("Introversion (0=Introvert, 10=Ekstrovert)", 0.0, 10.0, 5.0)
    sensing = st.slider("Sensing (0=Intuition, 10=Sensing)", 0.0, 10.0, 5.0)
    thinking = st.slider("Thinking (0=Feeling, 10=Thinking)", 0.0, 10.0, 5.0)
    judging = st.slider("Judging (0=Perceiving, 10=Judging)", 0.0, 10.0, 5.0)

    submitted = st.form_submit_button("üîç Prediksi")

if submitted:
    try:
        df = pd.DataFrame([[
            age, gender, education_bin, introversion, sensing, thinking, judging, interest
        ]], columns=[
            'Age', 'Gender', 'Education',
            'Introversion Score', 'Sensing Score', 'Thinking Score',
            'Judging Score', 'Interest'
        ])

        # Encode fitur kategorikal
        df['Gender'] = gender_encoder.transform(df['Gender'])
        df['Interest'] = interest_encoder.transform(df['Interest'])

        # Prediksi
        prediction = model.predict(df)
        result = target_encoder.inverse_transform(prediction)[0]

        st.success(f"üéâ Tipe kepribadian kamu adalah: **{result}**")
    except Exception as e:
        st.error(f"Terjadi kesalahan saat prediksi: {e}")